scalar Address
scalar DateTime
scalar BigNumber

enum NetworkEnum {
  MAINNET
  KOVAN
  TESTNET
  OFFLINE
  INVALID
}

type Block {
  hash: String!
  number: BigNumber!
  timestamp: DateTime!
}

type Account {
  address: Address!
  balance(token: TokenEnum!): BigNumber
}

type Token {
  address: Address!
  name: String!
  symbol: String!
  decimals: Int!
  price: BigNumber!
}

type Holding {
  token: Token!
  amount: BigNumber!
}

type HubRoutes {
  version: Version
  accounting: Accounting
  participation: Participation
  shares: Shares
  trading: Trading
  vault: Vault
  fees: FeeManager
  policies: PolicyManager
}

type Hub {
  address: Address!
  name: String!
  routes: HubRoutes!
  manager: String!
  creator: String!
  creationTime: DateTime!
}

type Accounting {
  address: Address!
  holdings: [Holding]!
  grossAssetValue: BigNumber!
  netAssetValue: BigNumber!
  sharePrice: BigNumber!
}

type Participation {
  address: Address!
}

type Shares {
  address: Address!
  totalSupply: BigNumber!
}

type Trading {
  address: Address!
}

type Vault {
  address: Address!
}

type PolicyManager {
  address: Address!
}

type FeeManager {
  address: Address!
  performanceFee: PerformanceFee
  managementFee: ManagementFee
}

type PerformanceFee {
  rate: Float!
  period: Float!
}

type ManagementFee {
  rate: Float!
}

type Version {
  address: Address!
}

type PriceSource {
  address: Address!
  lastUpdate: DateTime!
}

type Query {
  network: NetworkEnum!
  block: Block!
  prices: PriceSource!
  account: Account
  accounts: [Account!]!
  fund(address: Address!): Hub
}

type Schema {
  query: Query
}
