scalar DateTime
scalar BigNumber

enum NetworkEnum {
  MAINNET
  KOVAN
  INVALID
}

type TransactionReceipt {
  hash: String!
  cost: BigNumber!
}

type TransactionError {
  message: String!
  code: Int!
}

type TransactionResponse {
  receipt: TransactionReceipt
  error: TransactionError
}

type Block {
  id: ID!
  hash: String!
  number: BigNumber!
  timestamp: DateTime!
}

type Account {
  id: ID!
  address: String!
  balance(token: String = "ETH"): BigNumber
}

type FundRoutes {
  version: String
  accounting: String
  participation: String
  shares: String
  trading: String
  vault: String
  feeManager: String
  policyManager: String
}

type Fund {
  id: ID!
  address: String!
  name: String!
  manager: String!
  creator: String!
  creationTime: DateTime!
  routes: FundRoutes!
  sharePrice: BigNumber
  totalSupply: BigNumber
  nav: BigNumber
  gav: BigNumber
  managementFeeRate: BigNumber
  performanceFeeRate: BigNumber
  performanceFeePeriod: BigNumber
}

type Query {
  network: NetworkEnum
  block: Block
  account: Account
  accounts: [Account]!
  fund(address: String): Fund
  totalFunds: BigNumber
  latestPriceFeedUpdate: DateTime
}

type Mutation {
  depositWeth(amount: BigNumber): TransactionResponse!
}

type Schema {
  query: Query
  mutation: Mutation
}
