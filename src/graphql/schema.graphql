scalar Address
scalar DateTime
scalar BigNumber

enum NetworkEnum {
  MAINNET
  KOVAN
  INVALID
}

type TransactionReceipt {
  hash: String!
  cost: BigNumber!
}

type TransactionError {
  message: String!
  code: Int!
}

type TransactionResponse {
  receipt: TransactionReceipt
  error: TransactionError
}

type Block {
  id: ID!
  hash: String!
  number: BigNumber!
  timestamp: DateTime!
}

type Account {
  id: ID!
  address: Address!
  balance(token: TokenEnum!): BigNumber
}

type HubRoutes {
  version: Version
  accounting: Accounting
  participation: Participation
  shares: Shares
  trading: Trading
  vault: Vault
  fees: Fees
  policies: Policies
}

type Hub {
  id: ID!
  address: Address!
  name: String!
  routes: HubRoutes!
  manager: String!
  creator: String!
  creationTime: DateTime!
}

type Accounting {
  id: ID!
  address: Address!
  gav: BigNumber!
  nav: BigNumber!
  sharePrice: BigNumber!
}

type Participation {
  id: ID!
  address: Address!
}

type Shares {
  id: ID!
  address: Address!
}

type Trading {
  id: ID!
  address: Address!
}

type Fees {
  id: ID!
  address: Address!
}

type Vault {
  id: ID!
  address: Address!
}

type Policies {
  id: ID!
  address: Address!
}

type Version {
  id: ID!
  address: Address!
}

type PriceSource {
  id: ID!
  address: Address!
  lastUpdate: DateTime!
}

type Query {
  network: NetworkEnum!
  block: Block!
  prices: PriceSource!
  account: Account
  accounts: [Account!]!
  fund(address: Address!): Hub
}

type Mutation {
  wethDeposit(amount: BigNumber): TransactionResponse!
  wethWithdraw(amount: BigNumber): TransactionResponse!
}

type Schema {
  query: Query
  mutation: Mutation
}
